<Application x:Class="ExpenceManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ExpenceManager"
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <!--Item to add new Type-->
        <Style x:Key="ComboBoxItemTextBox" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#888888"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Name="Border"
                                Padding="2"
                                SnapsToDevicePixels="true">

                            <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#444444"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="True">
                                <Setter TargetName="Border" Property ="Background" Value="#777778"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--TextBlock style for AddGoodWindow-->
        <Style x:Key="OnAdditionTextBlock" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="102"/>
            <Setter Property="Margin" Value="6,2,6,2"/>
        </Style>

        <!--TextBox style for AddGoodWindow-->
        <Style x:Key="OnAdditionTextBox" TargetType="TextBox">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="Width" Value="106"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="outerBorder" CornerRadius="5" 
                                BorderThickness="{Binding RelativeSource={RelativeSource AncestorType=TextBox},Path=BorderThickness}"
                                Background="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=Background}"
                                BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=BorderBrush}"
                                Padding="2">

                            <ScrollViewer Margin="0"
                        x:Name="PART_ContentHost" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="#744D80"/>
                                <Setter TargetName="outerBorder" Property="Border.BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CircleImageButton" TargetType="Button">
            <Setter Property="Margin" Value="4"/>
            <Setter Property="MaxHeight" Value="80"/>
            <Setter Property="MinHeight" Value="80"/>
            <Setter Property="MaxWidth" Value="80"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="outerBorder"
                                CornerRadius="45"
                                BorderThickness="1">
                            <ContentPresenter Margin="2"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="outerBorder" Property="Border.Background" Value="#E999FF"/>
                                <Setter TargetName="outerBorder" Property="Border.BorderThickness" Value="1"/>
                                <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="#6C2680"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Square button with Image style-->
        <Style x:Key="ImageSquareButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MaxHeight" Value="60"/>
            <Setter Property="MinHeight" Value="60"/>
            <Setter Property="MaxWidth" Value="60"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="6,4,6,4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Rectangle x:Name="innerRect" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                       StrokeThickness="0">
                                <Rectangle.Fill>
                                    <Binding Path="Background">
                                        <Binding.RelativeSource>
                                            <RelativeSource Mode="FindAncestor" AncestorType="Button"/>
                                        </Binding.RelativeSource>
                                    </Binding>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter Margin="2"/>
                        </Grid>
                        
                        <!--Triggers-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="innerRect" Property="Rectangle.Fill" Value="#E999FF"/>
                                <Setter TargetName="innerRect" Property="Rectangle.StrokeThickness" Value="1"/>
                                <Setter TargetName="innerRect" Property="Rectangle.Stroke" Value="#6C2680"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="innerRect" Property="Rectangle.StrokeThickness" Value="1"/>
                                <Setter TargetName="innerRect" Property="Rectangle.Stroke" Value="#6C2680"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox style-->
        <!--ToggleButton for ComboBox-->
        <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="outerBorder" Grid.ColumnSpan="2" MinWidth="20"
                        Background="White" BorderBrush="#AD3DCC" BorderThickness="2"
                        CornerRadius="5"/>
                <Border x:Name="innerBorder" Grid.Column="0" Margin="2"
                        Background="Transparent" BorderThickness="1"/>
                <Path x:Name="Arrow" Grid.Column="1" Margin="4"
                        Fill="#744D80" VerticalAlignment="Center" HorizontalAlignment="Center"
                        Data="M0,0 L0,3 L6,9 L12,3 L12,0 L6,6 z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="#6C2680"/>
                    <Setter TargetName="outerBorder" Property="Border.BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="Arrow" Property="Path.Fill" Value="#6C2680"/>
                    <Setter TargetName="Arrow" Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="180"/>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="#6C2680"/>
                </Trigger>
                <Trigger Property="BorderBrush" Value="DarkGray">
                    <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="DarkGray"/>
                </Trigger>
                <Trigger Property="BorderThickness" Value="1">
                    <Setter TargetName="outerBorder" Property="Border.BorderThickness" Value="1"/>
                </Trigger>
                <Trigger Property="Foreground" Value="DarkGray">
                    <Setter TargetName="Arrow" Property="Path.Fill" Value="DarkGray"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Text box for ComboBox-->
        <ControlTemplate TargetType="TextBox" x:Key="ComboBoxTextBox">
            <Border x:Name="ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
        </ControlTemplate>

        <!--Exactly ComboBox style-->
        <Style TargetType="ComboBox" x:Key="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="toggleButton"
                                            Template="{StaticResource ToggleButton}"
                                        Grid.Column="2"
                                        Focusable="False"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press"/>
                            <ContentPresenter x:Name="contentSite" IsHitTestVisible="False"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="4,4,20,4"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"/>
                            <TextBox x:Name="textBlock" Grid.Column="0"
                                        Template="{StaticResource ComboBoxTextBox}"
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        Margin="4"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup x:Name="popup"
                                        Focusable="True"
                                        IsOpen="{TemplateBinding IsDropDownOpen}"
                                        AllowsTransparency="True"
                                        PopupAnimation="Slide"
                                        Placement="Bottom">

                                <Grid x:Name="popupGrid"
                                        SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="popupBorder"
                                        Background="#FF4F4F4F"
                                        BorderBrush="Black"
                                        BorderThickness="1"/>
                                    <ScrollViewer Margin="4,2,2,2">
                                        <!--Very important!-->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="toggleButton" Property="ToggleButton.BorderThickness" Value="1"/>
                                <Setter TargetName="toggleButton"
                                        Property="ToggleButton.BorderBrush" Value="DarkGray"/>
                                <Setter TargetName="toggleButton" Property="ToggleButton.Foreground" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBoxItem-->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="#888888"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#444444"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property ="Background" Value="#777778"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
